# Generated by OpenSesame 2.9.6 (Hesitant Heisenberg)
# Wed Jun  3 12:49:58 2015 (posix)
# <http://www.cogsci.nl/opensesame>

set background "black"
set bidi "no"
set canvas_backend "xpyriment"
set compensation "0"
set coordinates "relative"
set description "A template containing a practice and an experimental phase"
set expyriment_opengl "no"
set font_bold "no"
set font_family "mono"
set font_italic "no"
set font_size "28"
set foreground "white"
set height "768"
set keyboard_backend "legacy"
set mouse_backend "xpyriment"
set sampler_backend "legacy"
set start "experiment"
set subject_nr "0"
set subject_parity "even"
set synth_backend "legacy"
set title "Extended template"
set width "1024"

define sketchpad ITI
	set duration "[foo]"
	set reset_variables "no"

define notepad about_this_template
	set description "Some pointers to help you gest started!"
	__note__
	Hi,
	
	This template already contains the basic structure
	needed for a typical experiment, consisting of a
	practice phase, followed by an experimental phase.
	
	For more information, please refer to the website:
	<http://www.cogsci.nl/opensesame>
	
	Have fun with OpenSesame!
	
	--
	
	Sebastiaan
	__end__

define loop block_loop
	set break_if "never"
	set column_order ""
	set cycles "0"
	set item "trial_sequence"
	set order "random"
	set repeat "1"
	run trial_sequence

define sequence block_sequence
	set description "A sequence containing a single block of trials followed by feedback to the participant"
	set flush_keyboard "yes"
	run reset_feedback "always"
	run set_stimuli "always"
	run block_loop "always"
	run feedback "always"

define inline_script canvas
	___prepare__
	from openexp.canvas import canvas
	c = canvas(exp)
	font_size = 270
	font_size = 100
	c.set_font('mono', font_size)
	
	word = self.get('word')
	word_pos = self.get('word_pos')
	pair = self.get('pair')
	pair_pos = self.get('pair_pos')
	
	#print "word = %s" % word
	c.text(word,y=c.ycenter()+word_pos)
	c.text(pair,y=c.ycenter()+pair_pos)
	__end__
	___run__
	c.show()
	__end__

define sketchpad end_of_experiment
	set description "A sketchpad notifying the participant that the experiment is finished"
	set duration "keypress"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 0 0 "Press any key to exit" center=1 color="white" font_family="mono" font_size=18 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sketchpad end_of_practice
	set description "A sketchpad notifying the participant that the practice phase is finished"
	set duration "keypress"
	set reset_variables "no"
	set start_response_interval "no"
	draw textline 0 0 "Press any key to continue" center=1 color="white" font_family="mono" font_size=18 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sequence experiment
	set description "The main sequence of the experiment"
	set flush_keyboard "yes"
	run instructions "always"
	run form_text_input "always"
	run about_this_template "always"
	run practice_loop "always"
	run end_of_practice "always"
	run experimental_loop "always"
	run end_of_experiment "always"

define loop experimental_loop
	set break_if "never"
	set column_order "practice"
	set cycles "1"
	set description "A loop containing one or more experimental blocks"
	set item "block_sequence"
	set order "random"
	set repeat "1"
	setcycle 0 practice "no"
	run block_sequence

define feedback feedback
	set description "Provides feedback to the participant"
	set duration "keypress"
	set reset_variables "yes"
	draw textline 0 -96 "Your average response time was [avg_rt]ms" center=1 color="white" font_family="mono" font_size=18 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 32 "Press any key to continue" center=1 color="white" font_family="mono" font_size=18 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -32 "Your accuracy was [acc]%" center=1 color="white" font_family="mono" font_size=18 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"

define sketchpad fixation_cross
	set description "Displays stimuli"
	set duration "495"
	set reset_variables "no"
	set start_response_interval "no"
	draw line 0 -25 0 25 color="white" penwidth=6 z_index=0 show_if="always"
	draw line -25 0 25 0 color="white" penwidth=6 z_index=0 show_if="always"

define form_text_input form_text_input
	set cols "1"
	set form_question "Enter N-word stimuli block number (0-9, 0 = practice stimuli)"
	set form_title "Choose stimulus block (test mode)"
	set form_var "block"
	set rows "1;1;6"
	widget 0 0 1 1 label text="[form_title]"
	widget 0 1 1 1 label center="no" text="[form_question]"
	widget 0 2 1 1 text_input focus="yes" stub="" return_accepts="yes" var="[form_var]"


define sampler incorrect_sound
	set duration "sound"
	set fade_in "0"
	set pan "0"
	set pitch "1"
	set sample "incorrect.ogg"
	set stop_after "0"
	set volume "1"

define sketchpad instructions
	set duration "keypress"
	set reset_variables "no"
	draw textline 32 0 "Press any key to start." center=1 color="white" font_family="mono" font_size=24 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 -320 "Instructions" center=1 color="white" font_family="mono" font_size=28 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -480 -256 "During this task you will see pairs of words followed by a single dot, or a pair <br />of dots.  If you see a single dot, press the left mouse button.  If you see two<br />dots, press the right mouse button.  You will hear a sound if your response is<br />incorrect.<br />" center=0 color="white" font_family="mono" font_size=20 font_bold="no" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline -480 -128 "Respond as quickly and accurately as possible." center=0 color="white" font_family="mono" font_size=20 font_bold="yes" font_italic="no" html="yes" z_index=0 show_if="always"

define logger logger
	set description "Logs experimental data"

define mouse_response mouse_response
	set allowed_responses "1;3"
	set correct_response "[correct]"
	set flush "yes"
	set show_cursor "no"
	set timeout "2000"

define loop practice_loop
	set break_if "never"
	set column_order "practice"
	set cycles "1"
	set description "A loop containing one or more practice blocks"
	set item "block_sequence"
	set order "random"
	set repeat "1"
	setcycle 0 practice "yes"
	run block_sequence

define sketchpad probe
	set duration "0"
	set reset_variables "no"
	draw image 0 "[probe_pos]" "probe_[probe].png" scale=1 center=1 z_index=0 show_if="always"

define reset_feedback reset_feedback

define inline_script set_iti
	___prepare__
	import random
	iti = random.randint(100,500)
	self.experiment.set("foo",iti)
	__end__
	set _run ""

define inline_script set_stimuli
	___prepare__
	top    = 192.5
	bottom = -192.5
	left   = 'left_button'
	right  = 'right_button'
	
	word_pos  = (bottom, bottom, bottom, bottom, top, top, top, top)
	pair_pos  = (top, top, top, top, bottom, bottom, bottom, bottom)
	probe     = (1,1,2,2,1,1,2,2)
	probe_pos = (bottom, top, bottom, top, bottom, top, bottom, top)
	correct   = (left, left, right, right, left, left, right, right)
	
	# n-words
	# FIXME: read from file
	nwords = {
		0:(['Despair','Parting'],['Wound','Attic'],['Battle','Choose'],['Chaos','Pupil'],['Burden','Accident'],['Defeated','Scissors']),
		1:(['Suspicious','Discussion'],['Disappointed','Concentrated'],['Worthless','Situation'],['Crime','Guest'],['Bad','Boy'],['Betrayed','Matching']),
		2:(['Excluded','Ordinary'],['Terrified','Apathetic'],['Damage','Memory'],['Loser','Faith'],['Loss','Bold'],['Agony','Abbey']),
		3:(['Punished','Follower'],['Brag','Tree'],['Weapon','Valley'],['Attack','Return'],['Conflict','Activity'],['Failure','Joining']),
		4:(['Abandon','Witness'],['Cowardly','Sympathy'],['Harm','Milk'],['Ashamed','Opinion'],['Nazi','Tell'],['Divorce','Teacher']),
		5:(['Illness','Herring'],['Distressed','Astonished'],['Threat','Source'],['Accused','Curious'],['Hurt','Book'],['Depressed','Abundance']),
		6:(['Frightened','Intonation'],['Lie','Vow'],['Useless','Whisper'],['Nightmare','Housewife'],['Angry','Build'],['Hell','Poet']),
		7:(['Stinking','Receiver'],['Destroy','Ceiling'],['Murder','Tricky'],['Stressed','Language'],['Prison','Member'],['Bomb','Lake']),
		8:(['Misfortune','Collective'],['Enemy','Organ'],['Lonley','Cellar'],['Afraid','Leader'],['Crisis','Forest'],['Evil','Rise']),
		9:(['Devil','Weave'],['Victim','Desert'],['Anxious','Release'],['Argument','Remember'],['Sad','Lip'],['Corpse','Salary'])
		}
	string = ""
	block  = self.get('block')
	for pair_num in range(0,6):
		for i in range(0,8):
			cycle = pair_num * 8 + i
			string += "setcycle %d word_pos \"%s\"\n" % (cycle,word_pos[i])
			string += "setcycle %d word \"%s\"\n" % (cycle,nwords[block][pair_num][0])
			string += "setcycle %d probe \"%d\"\n" % (cycle,probe[i])
			string += "setcycle %d pair_pos \"%s\"\n" % (cycle,pair_pos[i])
			string += "setcycle %d pair \"%s\"\n" % (cycle,nwords[block][pair_num][1])
			string += "setcycle %d probe_pos \"%s\"\n" % (cycle,probe_pos[i])
			string += "setcycle %d correct \"%s\"\n" % (cycle,correct[i])
	# i-words
	# FIXME: read from file?
	# possibly better if it can easily be included in tarball
	iwords = {
		0:(['Failure','Teacher'],['Money','Board'],['Happiness','Sentiment'],['Psychology','Suspicious'],['Contribution','Destruction'],['Life','Part'])
		}
	for pair_num in range(0,6):
		for i in range(0,8):
			cycle = 48 + pair_num * 8 + i
			string += "setcycle %d word_pos \"%s\"\n" % (cycle,word_pos[i])
			string += "setcycle %d word \"%s\"\n" % (cycle,iwords[0][pair_num][0])
			string += "setcycle %d probe \"%d\"\n" % (cycle,probe[i])
			string += "setcycle %d pair_pos \"%s\"\n" % (cycle,pair_pos[i])
			string += "setcycle %d pair \"%s\"\n" % (cycle,iwords[0][pair_num][1])
			string += "setcycle %d probe_pos \"%s\"\n" % (cycle,probe_pos[i])
			string += "setcycle %d correct \"%s\"\n" % (cycle,correct[i])
	
	string += "run trial_sequence\n"
	print string
	
	bl = exp.items["block_loop"]
	bl.from_string(string)
	bl.cycles = 96
	bl.repeat = 1
	bl.order  = "random"
	
	from pprint import pprint
	#pprint(vars(bl))
	pprint(bl.item)
	#raise Exception('abort')
	__end__
	set _run ""

define sketchpad stimuli
	set duration "1245"
	set reset_variables "no"
	draw textline 0 "[word_pos]" "[word]" center=1 color="white" font_family="mono" font_size=111 font_bold="yes" font_italic="no" html="yes" z_index=0 show_if="always"
	draw textline 0 "[pair_pos]" "[pair]" center=1 color="white" font_family="mono" font_size=111 font_bold="yes" font_italic="no" html="yes" z_index=0 show_if="always"

define text_input text_input
	set _question "Enter block number (0-9, 0 = practice)"
	set accept_on "return press"
	set background "black"
	set font_family "sans"
	set font_size "24"
	set foreground "white"
	set frame "yes"
	set frame_width "3"
	set linewidth "600"
	set timeout "987"

define sequence trial_sequence
	set description "A single trial"
	set flush_keyboard "yes"
	run set_iti "always"
	run fixation_cross "always"
	run canvas "always"
	run stimuli "always"
	run probe "always"
	run mouse_response "always"
	run ITI "always"
	run incorrect_sound "[correct] = 0"
	run logger "always"

